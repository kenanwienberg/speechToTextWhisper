sind die Monte Carlo Algorithmen, wie die auch in der Bibliothek z.B. verwendet und das andere sind die sogenannten Las Vegas Algorithmen. Die Monte Carlo Algorithmen, die haben die Eigenschaft, dass sie immer eine Antwort geben, aber leider können uns die Monte Carlo Algorithmen nicht garantieren, dass die Antwort richtig ist. Und wir werden gleich sehen, was das für Auswirkungen hat und warum man solche Algorithmen trotzdem sinnvoll verwenden kann. Also wenn jetzt z.B. wenn Sie eine Abrechnung machen müssen und Sie bekommen in einem Geschäft eine Rechnung und Sie würden jetzt nicht wissen, dass das korrekt ist, dann wären Sie nie bereit, anzuhören. Das ist völlig klar. Aber es gibt Situationen, in denen es sinnvoll sein kann, sich auch mal eine falsche Antwort geben zu lassen und darauf zu reaktionieren. Und das machen die Monte Carlo Algorithmen. Die Las Vegas Algorithmen sind anders, die geben stets richtige Antworten, sind in der Regel auch schnell, also in den meisten Fällen sind sie schnell, aber manchmal können die Antworten ewig dauern. Da kann ich nicht sagen, dass irgendwann die Antworten lange auf sich warten lassen. Und wenn man das so erzählt, wie ich es jetzt gemacht habe, dann klingt es vielleicht sogar auch ein bisschen absurd, dass man solche Algorithmen verwenden will, aber das ist auch der Grund, warum wir heute diese zwei Beispiele zum Monte Carlo und Las Vegas haben. Und ich möchte mit einem Monte-Carlo-Gleichheits-Test anfangen. Und wenn man ein Gleichheits-Test machen will, muss man eben untersuchen, ob zwei Dinge gleich sind. Also wenn ich zwei Zahlen hervorhebe, ob A oder B, ist das relativ einfach zu überprüfen. Macht also keinen Sinn, wir machen es einfach ein klein bisschen schwieriger. Und wir sehen hier, wie schwierig es sich machen würde. Ich habe drei N-Kreuz-N-Matrixen, A, B und C. Und ich möchte wissen, ob A mal B gleich C ist. Also N-Kreuz-N-Matrixen bedeutet einfach, das sind Matrixen mit N Spalten, N Zeilen, das hat N Quadrat Einträge, hat jede Matrix. Und A mal B kann man ausrechnen, da gibt es einen Vorschritt, den werde ich Ihnen gleich rausschreiben. Dann kann ich natürlich ausrechnen, ob A mal B gleich C ist. Aber ich muss dann für diese N Quadratelemente eben untersuchen, ob die alle gleich sind. Und ich muss diese Modifikation von A und B durchführen. Und wenn man das naiv macht, dann funktioniert das natürlich. Klar, man kann nämlich A mal B dadurch berechnen, dass sich das Element IK, also wenn das mal C ist, dann ist das I-Karte-Element, steht eben an der I-Karten-Position. Das kann ich eben dadurch ausrechnen, dass ich A mal B und K rechne, und das funktioniert wunderbar. Das kann man machen. Und anschließend vergleicht man eben alle C-I-K mit den gegebenen C-I-K, die man in der Matrix stehen hat. Wenn man jetzt schaut, wie hoch das arithmetische Aufwand ist, klar, der arithmetische Aufwand, weil jeder hat nicht nur N Quadrate Vergleiche machen, und jeder Vergleich kostet eben das Aufsummieren dieser Produkte. Das heißt, der arithmetische Aufwand ist ein Fetter von den Hochzeiten. Also ich hoffe, dass ich das so beschreibe, dass die direkt verbraucht sind. Also der Aufwand ist in Ordnung von N hoch 3, und die Frage ist, geht das denn? Kann man das mit weniger Aufwand machen? Und ich, als Kommunikator komme ich aus der Praxis auch, und ich will einfach immer darauf hinweisen, N hoch 3 klingt zunächst ganz gut. Also es ist gar nicht so schlimm, aber bei großen Matrixen, und wir lernen davon über Grafik, zum Beispiel bei uns gibt es Matrixen, in diesem Fall, da ist N gleich 10 hoch 6. Und dann wäre eben N hoch 3, 10 hoch 18. Und das sind 10 hoch 18 Additionen, auch wenn man einen schnellen Rechner hat. Und auch wenn man viele Halbzonen parallel macht. 10 hoch 18 ist eine riesige Zahl. 10 hoch 6, 1 Million, das geht. Also Sie wissen, wie schnell, wie hoch der Takt zur normalen Rechnung ist. Gigahertzbereich oder so. Ja, dann kann man eben 10 hoch 9, 1 Mio. Programm pro Sekunde durchführen. Aber 10 hoch 18 ist eben 10 hoch 9 mal 10 hoch 8. Das ist eben eine riesige Zahl. Deshalb, ein Programm von N hoch 3, den wir in so großen Fällen natürlich gerne auch reduzieren. Und wenn man hier irgendwie das schafft, kommt man da irgendwo zu etwas kleineren. N hoch irgendwas, N hoch D und D kleiner 3. Dann sieht es schon individuell schon ganz gut aus. Und ich kann Ihnen jetzt sagen, natürlich, wir werden uns fragen, das ist deutlich besser, wir schaffen es sogar, D gleich 2 zu machen. Aber wir werden sehen, wie. Okay, wie führt man jetzt bei so einer Fragestellung Zufall ein? Und die Idee ist hier sehr einfach. Also ich habe hier nochmal aufgelistet, Wenn Vergleichsregler Fragen dann gehen, dann geht es schneller. Genau, randomisiert geht es schneller und wie. Und da ist Freiberg auf folgende Idee gekommen. Er hat gesagt, okay, ich habe eine Matrix. Ich habe eine Matrix A. Ich habe eine Matrix B. Und will A mal B rechnen. Und jetzt rechne ich hier einfach A mal B mal Zufallsvektor 0, 1, 1, irgendwas. Und der hat N, 1 rechnet. Das ist ein Zufallsvektor 0, 1, 2, N. Einfach. Generell aufgefüllten Vektor mit N, 1. Der hat genau. Und ich rechne A mal B mal N. Und dann, das ist die eine Sache, was ich rechne. Dann rechne ich C mal. Mal diesen Vektor. Dann verwende ich hier wieder V. Das ist genau das gleiche. Die beiden sind gleich. Wieder der Vektor 0, 1 und so weiter. Und jetzt vergleiche ich das Ergebnis. Okay. Das ist natürlich eine Methode, die man machen kann. Ich habe es hier nochmal aufgeschrieben. Ich rechne A mal B mal X. Und C mal X. Ja, und wenn jetzt A mal B mal X für diesen Zufallsvektor ungleich C mal X ist, dann weiß ich, eine Sache ist sicher. Dann ist A mal B, kann ich gleich C sagen. Wenn ich den Vektor modifiziert habe und bekomme ein anderes Ergebnis heraus, dann ist das, ja, dann ist A mal B ungleich C. Wenn ich mir jetzt überlege, was hat mich, wie groß ist der Aufwand, den ich jetzt gebraucht habe, um das auszurechnen, dann kann ich überlegen, B mal X bedeutet, ich habe einfach ein Aufwand, also die Matrix mal Vektor kommunizieren, das ist einfach, der Aufwand ist einfach in Quadrat, weil für jede, also wenn ich, ich schreibe es einfach nochmal auf, wenn ich A mal X ausreichen will, und A besteht aus A, I, J, und X besteht aus X, I, okay, dann ist der Vektor X aus X, I, besteht aus A, I, J, dann A mal X wäre einfach die Summe von J gleich 1 bis N, A, I, J mal X, J, und das wäre das Liege-Element von diesem Vektor. Okay, kann ich so leicht ausreichen, das heißt, ich habe, ich muss das für N Elemente machen, für I, J, 1 bis N, hier ist der Aufwand N, dann ist diese Frage zu beantworten, Aufwand ist einfach N vertragen, okay, gut, A, B ungleich C, die unglückliche Sache ist die, wenn A mal B mal X gleich C mal X herauskommen, dann würde ich ja sagen, ich gehe davon aus, dass A mal B gleich C ist, und jetzt sehen Sie schon diese Idee, diese Antwort, die wäre halt nicht so gut, das könnte die falsche Antwort sein, wir wissen das nicht, es kann sein, dass der A mal B gleich C ist, aber es könnte auch noch unterschiedlich sein, bestimmen Sie sich vor, ich hätte nur den Vektor 1 und 0 höher genommen, dann hätte ich immer nur, angeguckt, in all den Spalten hätte ich stehen können, was will, ich hätte da immer solche Ergebnisse bekommen, deshalb ist diese Antwort nicht so gut. Okay, ich habe das von meinen Bemerkungen zusammengefasst, der charakteristische Aufwand ist N vertragen, der Aufwand an Vergleichen ist nur E von N, O von N, und natürlich darf ich so rechnen, wenn A mal B mal X ist A mal B mal X, und die Attributivität gilt mir jetzt, dass ich hier nur N Aufwand habe, und dann wird es 2, wir haben auch nur N Aufwand, also ist der Aufwand 2N, und vergleichen wir das, ja, im Fetter von N vertragen, ja, okay, also, wenn ich es hier zuerst gerechnet hätte, dann wäre es natürlich schlimmer, aber der Aufwand ist N, der Fetter von N vertragen, und wir dürfen auch sagen, dass die Antwort A, B, U-Grenze unproblematisch ist, die stimmt natürlich, weil dann ist A, B, das ist dann E-Grenze, aber die Antwort A, B gleich C wäre problematisch, da wir schließen mit einem einzigen Vektor, der auch den gleichen Vektor hat, dass dann alle Zufallsvektoren auf das richtige Vektor stehen, also auf das gleiche Vektor, das ist natürlich falsch. Gut, und jetzt könnte man sagen, okay, dieser Algorithmus funktioniert nicht, aber das Freibad hat nicht aufgegeben, und dieser Algorithmus von Herrn Freibald, das können Sie im Buch von Horst Warnig schön nachlesen, den kann man nicht nur für diese Matrize verwenden, sondern das kann man auch für gleiche Koordinierungen und viele andere Strukturen in der gleichen Weise machen, denn Herr Freibald hat jetzt beobachtet, dass in Folgeform, Folgeform sagt man halt, eben bildlich ist. Und hier komme ich jetzt eben zu einem Konzept, das wir noch ausführlich besprechen werden, und das ist noch vorrastig, noch elementar vorrastig, eine große Rolle spielt, und das ist das sogenannte Urnenmodell. Man geht davon aus, dass man eine Urne hat, und die enthält, die Urne hängt natürlich von A, B und C, der Inhalt der Urne hängt davon ab, und Sie enthält zu jedem Zufallsrektor X eine geförderte Kugel K, da ist die Urne, die gibt ihre Farbe, das sind ihre Kugeln, die werden generiert durch die Matrizen A, B, C, und je nachdem, die enthält jetzt diese Kugel in unterschiedlichen Farben, grün und rote, oder andere, und da gibt es die unterschiedlichen Farben, und die kommen dadurch bestanden, dass bei dem grünen Fall, A, B, X gleich C, X sein, und im roten Fall, der A, B, X gleich C. Das sind die, die sagen, sie sind ungleich, und das kann man sich so einfach vorstellen, da gibt es eben nur die zwei Klassen, und das ist die Aufbeobachtung, die Weihwald betroffen hat, dass er sagt, okay, so kann man sich das vorstellen. Im ganzen Prozess kann man sich so vorstellen, dass die Entscheidung, die ich hier treffe, entweder grün oder pink ist mein Fall, oder rot, dass es eben nicht gleich ist, diese Entscheidung, also die tritt einfach auf, je nachdem, wie man es gewinnt. Und damit kann ich alle Zufallsvektoren, die es in diesem Raum gibt, und die kann man sogar austeilen, wie viele das sind, es sind gar nicht so viele, man kann gar nicht so viele Zufallsvektoren generieren, also wenn man sich das kurz überlegen will, man hat N Positionen, und die kann man mit 0, 0, 1 besetzen, da gibt es einfach zwei N Möglichkeiten, wie man das machen kann, also gibt es zwei N Vektoren in diesem Raum, das heißt, wir haben hier drinnen zwei Hoch-N, das ist eine Farbenscheibe, dass es irgendwie gehört, es gibt da drinnen zwei Hoch-N Kugeln, und die tragen die Farbe grün oder lila, je nachdem, ob A, B, X gleichzeitig ist oder A, B, X ungleichzeitig ist. Okay, und jetzt sehen Sie schon, Freiburg hat jetzt erkannt, dass man natürlich nicht anhand von einer Kugel entscheiden kann, ob A, B, X gleichzeitig ist, ob A, B gleichzeitig ist, wenn A, B gleichzeitig ist, dann muss es aber nur grüne Kugeln geben, wenn A, B grüne Kugeln geben, wenn A, B gleichzeitig ist, dann wird es viele Kugeln geben, aber dann gibt es bereits ein paar rote, und wenn die roten Kugeln die grünen Kugeln, und wenn gleich rote Kugeln kommen, dann kann man nicht davon ausgehen, dass A, B gleichzeitig ist. Und so weit man kann es natürlich auch abnehmen, bis gar kein einzelner Kugel von A, B oder von C abgegeben hat. Okay, also das ist die Beobachtung, die Freiburg gemacht hat, und jetzt gibt es eben auch ein extrem geschicktes Problem. Okay, ich habe es hier einfach mal zusammengepackt. Also A, B, also die Kugeln, die werden geeinigt, so wie ich es beschrieben habe, also ich habe leider jetzt die falsche Farbe verbunden mit meinem Bild, weil ich habe hier stehen, A, A, B gleichzeitig, dann mache ich die Kugeln blau, weil A, B gleichzeitig ist, mache ich die Kugeln rot. Also ich habe das so gemacht, dass ich die blauen Kugeln habe, und hoffe, dass ich das jetzt nicht verwirrt. Also ich fördere die Kugeln, je nachdem, wie das Ergebnis war, die Gedanken, natürlich mache ich das alles mit dem Algorithmus, weil der Algorithmus sollte mir immer helfen, das schnell zu machen, deshalb rechne ich nicht alles aus. Ich mache keine Informationen, die ich brauche. Ich stelle mir nur vor, dass so gebraucht wird. Und jetzt sage ich den A, B gleichzeitig, dass ich immer nur blaue Kugeln trinke, wie der Herr vorhin gesagt hat. Man findet keine, also keine Kugeln, die ihre Farbe sind, sein. Und jetzt kann man sich überlegen, wie sieht es aus? Wie viele können überhaupt blau oder rot sein? Man denkt, wenn es gleich ist, dann sind alle natürlich blau. Jetzt ist die Frage, wenn A, B ungleich sind, wie viele sind dann blau? Das hat der Herr Teilweise gemacht. Er hat festgestellt, dass wenn A, B ungleich sind, dann bleiben dort immer noch blaue Kugeln. Ich habe ihm ein Beispiel gezeigt, wo die gleich sind. Da gibt es blaue Kugeln, obwohl sie ungleich sind. Da hat er mir gesagt, wenn nur die erste Spalte gleich ist, von A mal B und von C, da brauche ich nur 1 und wenn ich nur 0 einsetze, dann kriege ich genau, dann wird es immer gleich sein, also ich kriege dann blaue Kugeln. Auch wenn der Rest der beiden Matrizen völlig unterschiedlich ist. Also wenn nur die erste Spalte stimmt, dann sind sie schon gut, aber wenn es blau ist, kann ich nicht mehr so blaue Kugeln machen. Aber im Versand ist jetzt, dass wenn A ungleich ist, dann ist das die Hälfte aller Kugeln. Und den Satz muss man natürlich wenn man es verwenden will, beweisen. Und ich habe jetzt einfach einen einfachen Beweis und in den Übungen kann man die Aussage, es gibt auch eine Übung, um eben einen schönen Beweis zu machen, aber ich werde mich mit einem einfachen Beweis genügen lassen. Einfach um sich zu motivieren, warum so etwas sein sollte. Und wir nehmen mal an, dass wir AB ausgerechnet haben, also das rechnen wir aus mit der Form, die ich am Anfang gezeigt habe und dann die Differenz von AB und C. Die Differenzmatrix nenne ich die und wenn AB ungleich C ist, dann muss diese Differenzmatrix unterschiedlich sein von der Nullmatrix. Dann gibt es irgendwo einen Eintrag, der nicht Null ist, weil AB ist eben der Gänzeste. Dann gibt es so einen Eintrag. Also es gibt eine Matrixposition, da ist das DI ungleich. Also ich glaube, das stimmen alle zu. Gut, und jetzt mache ich Folgendes, jetzt habe ich die Matrix D und da gibt es einen Eintrag DIJ. Das heißt, in der J-Spalte von dieser Matrix und in der I-Seite, da ist der Eintrag ungleich Null. Da steht DIJ. Mach mal rot, vielleicht und dann ist es richtig klar, was hier los ist. Da ist DIJ. Okay. Da ist auf jeden Fall die Ungleich Null und wenn immer ich jetzt den Vektor nehme aus dieser Menge, ich betrachte die Rj, das sind alle Vektoren, also das sind jetzt Vektoren, eigentlich würde ich das mal grün machen. Grün machen. Da garantiere ich, dass der dritte Eintrag der dritte Eintrag, dann würde ich, dass der Null ist. Die anderen dürfen sein, wie sie wollen. Also jede andere Eintragstelle. Das ist natürlich klar. Die dürfen alle sein, wie sie wollen. Wir müssen nur eine Sache haben, dass der Eintrag, der soll Null sein und warum macht es das? Es ist ja angeschlossen, wenn ich das DIJ ungleich Null habe, ich modifiziere das mit diesem X, dann wird DIJ in jedem Fall in allen Punkten, für alles, also für alles, ja für das Produkt, da kommen wir wieder in der Sache raus. Im J-Eintrag wird DIJ keine Rolle spielen. Das ist ganz klar. DIJ ergänzt sich mit Null über Null. Das nehmen wir als Teil des Projekts. XJ soll Null sein und EJ, das ist der J-Einheitsrechnung. Das ist dann der Einheitsrechnung, der hat überall Null und hat nur 1 und ist ein J-Einheitsrechnung. Das ist sozusagen das Kompliment von dem, was ich gerade gebaut habe. Den Einheitsrechnung habe ich jetzt ganz speziell, denn er wird auf jeden Fall in jedem Fall den Vektor hier durch den J-Einheitsrechnung modifizieren, den wir auf jeden Fall zumindest sehen würden. Der J-Einheitsrechnung. Gut. Und dann ist es klar, dieses Rj, da habe ich jetzt einen der Einträge festgehalten. Ich kann also für N-1 N-1 in den J-Einheitsrechnung gehen. Das heißt, ich habe 2 hoch N-1 als Anzahl möglicher Vektoren in Rj. Das ist nur die Hälfte und das ist genau die Hälfte von allen Nullen. Weil, natürlich habe ich wenn ich alle aufgeschrieben hätte und ich portiere jetzt diejenigen raus, die N-1 haben in der Hälfte. Okay. Gut. Und was auch interessant ist, wenn ich jetzt ein x-Vektor nehme, ein Vektor aus Rj, der eigentlich Null stehen hat in der J-Komponente und ich portiere Ej, dann kann ich mir sicher sein, er wird in der J-Komponente ein N haben und klar, das ist dann das Ganze ohne die, die in Rj liegen. Er hat in der J-Komponente ein Spiel und keine Null. In Rj liegen nur die, die in Null stehen. Also, die kann ich einfach wegnehmen von allen möglichen Abstellen. Gut. Und jetzt gibt es eine einfache Verhaltung, die können wir gleich nachvollziehen. Wenn wir so ein x aus Rj nehmen, dann ist dx ungleich Null oder, also dx, wenn x von 1 rauskommt oder irgendwas anderes, aber es ist entweder Null oder, wenn ich Ej dazu addiere zu meinem x, dann mache ich, setze ich eine 1 rein, dann ist Ej ungleich Null. Also 1 von beiden muss immer ungleich Null sein. Entweder ist eine Anwendung von Vektoren aus Aj liefert schon oder eine Anwendung von diesem Vektor. Andere Theorien sind sehr leicht zu beweisen, weil wenn dx ungleich Null ist, dann ist 2 und das gilt auch. Und wenn dx gleich Null ist, dann ist es auch nicht schlimm, denn dann rechne ich aus dx plus Ej, wegen der Linearität der Matrixmodifikation, das ist dx plus Ej, dx plus Ej, von dem hier weiß ich, dass Null rauskommt, aber von Ej, das habe ich Ihnen ja schon gesagt, das haben wir genau so gefasst, unter dEj ist ungleich Null, also wird auf jeden Fall an der j-Stelle von dem Ergebnisvektor wird der Eintrag dEj stehen. Das habe ich jetzt hier aufgeschrieben. Hier steht, ich habe das einfach nochmal aufgeschrieben, dass ich es mit eigenen Augen sehe, da steht wirklich dEj als j-er Eintrag und von dem haben wir angenommen, das ist ungleich. Also ist dies ungleich Null und damit ist es schon bewiesen, entweder ist dx ungleich Null oder dx plus Ej ungleich Null. Gut, und in Zusammenfassung können wir jetzt sagen, zu jenem x aus Rj, wenn wir es hier rausnehmen, also aus dieser Menge, entweder der Vektor x oder der Vektor x plus Ej und man sagt da Entzeuge dafür, dass a, b ungleich sind. Also wenn a, b ungleich sind, dann ist x oder x plus Ej jeweils Entzeuge dafür, dass a, b ungleich sind. Und gut, wenn wir jetzt noch beachten, wenn wir den Fall haben, dass diese Vektoren zusammen mit aj alle Vektoren geben, dann habe ich es hier aufgeschrieben und damit führe ich hier auch die Notation ein, die grundsätzlich ist, dieses Symbol, diese eckige Vereinigung, das ist Vereinigung, wie Sie sie wahrscheinlich schon kennen und hier, wenn es eckig ist, dann meine ich hier, das ist so verwendet in dieser Art, dass es eine disjunkte Vereinigung ist. Eine disjunkte Vereinigung von diesen beiden Mengen, wenn man das betrachtet, dann ist das alles natürlich völlig klar. Gut, und jetzt können wir Algorithmus rausmachen. Jetzt ist alles damit in der Sphäre. Also positiv zahlen K und machen nicht einen Versuch, sondern K-Versuch. Wir greifen einfach einmal in die Urne U, A, B, C rein und holen so eine Kugel aus. Was bedeutet das? Wir müssen nicht nur den Test für einen Vektor machen, sondern für K-Vektoren. Wir haben K-unterschiedliche Vektoren und rechnen für diese K-unterschiedlichen Vektoren für die Aufwärmung von N², also K mal N², K mal Theta von N² oder immer noch Theta von N², aber rechnen wir aus, ob die gleich sind. Und die gute Sache ist jetzt, wenn alle gezogenen Kugeln raus sind, antworten wir sofort mit A, B gleich C. Und wenn eine Kugel roh ist, eine einzelne, das reicht uns schon, dann sagen wir A, B und gleich C. Und jetzt ist die Frage, ob der K-Unterschied besser ist, als was wir bisher hatten. Und klar, der ist besser. Der anatomische Aufwand ist im Prinzip immer noch Theta von N². Das habe ich schon gesagt. Der Aufwand beim Vergleichen ist immer noch K mal N hoch und N. Und immer noch ist A mal B ungleich C unproblematisch. Und zusätzlich bei hinreichend großen K ist es gar nicht mehr so wirklich problematisch. Weil die Wahrscheinlichkeit, dass man immer eine blaue Kugel greift, obwohl höchstens die Hälfte der Kugel blau ist, ist die Wahrscheinlichkeit immer kleiner als ein Halb für die blauen Kugeln. Die Wahrscheinlichkeit dafür, eine blaue Kugel zu bekommen, ist höchstens ein Halb. Die ist auf jeden Fall kleiner als ein solch Zwei-Kugel-K. Zwei Kugeln zu beziehen, die blau sind, ist mit der Wahrscheinlichkeit ein Halb. Das ist wie ein Münzwurf. Wenn man einmal wirft, und die Wahrscheinlichkeit ist ein Halb, Kopf und Zahl zu erhalten, dann ist bei einem Wurf die Wahrscheinlichkeit richtig zu liegen. Bei zwei Würfen, wenn man zweimal Kopf haben will, dann ist es nur noch ein Viertel. Dreimal Kopf zu haben, dann ist es ein Achtel. Sie sehen, wie schnell es abnimmt. 1 durch 2 Buch K fällt exponentiell schnell ab. Wenn Sie jetzt zum Beispiel 10 Würfe gemacht haben, bei 2 Buch 10, das ist 1025, dann ist es nur noch ein Tausendstel. Die Wahrscheinlichkeit dafür, dass keine der Kugeln rot war, obwohl mindestens die Hälfte oder höchstens die Hälfte blau ist. Okay. Sie sehen, Freibadsalgorithmus ist einfach extrem geschickt. Und die Zahl ist nicht genau. Das ist eben das Problematische bei Monte Carlo Algorithmen, dass Monte Carlo Algorithmen immer die richtige Antwort liefern, auch wenn man